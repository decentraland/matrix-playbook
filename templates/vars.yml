---
# The bare domain name which represents your Matrix identity.
# Matrix user ids for your server will be of the form (`@user:<matrix-domain>`).
#
# Note: this playbook does not touch the server referenced here.
# Installation happens on another server ("matrix.<matrix-domain>").
#
# If you've deployed using the wrong domain, you'll have to run the Uninstalling step,
# because you can't change the Domain after deployment.
#
# Example value: example.com
matrix_domain: MATRIX_DOMAIN

# The Matrix homeserver software to install.
# See `roles/matrix-base/defaults/main.yml` for valid options.
matrix_homeserver_implementation: synapse

# A secret used as a base, for generating various other secrets.
# You can put any string here, but generating a strong one is preferred (e.g. `pwgen -s 64 1`).
matrix_homeserver_generic_secret_key: 'GENERIC_SECRET_KEY'

matrix_server_fqn_matrix: "SUBDOMAIN.{{ matrix_domain }}"
# This is something which is provided to Let's Encrypt when retrieving SSL certificates for domains.
#
# In case SSL renewal fails at some point, you'll also get an email notification there.
#
# If you decide to use another method for managing SSL certificates (different than the default Let's Encrypt),
# you won't be required to define this variable (see `docs/configuring-playbook-ssl-certificates.md`).
#
# Example value: someone@example.com
matrix_ssl_lets_encrypt_support_email: 'dservices+matrix@decentraland.org'

# A Postgres password to use for the superuser Postgres user (called `matrix` by default).
#
# The playbook creates additional Postgres users and databases (one for each enabled service)
# using this superuser account.
matrix_postgres_connection_password: 'POSTGRES_PASSWORD'

matrix_ssl_retrieval_method: none

matrix_synapse_container_client_api_host_bind_port: '127.0.0.1:8008'

matrix_synapse_workers_enabled: true

matrix_nginx_proxy_https_enabled: false

matrix_client_element_enabled: false

matrix_synapse_enable_registration: true

# matrix_synapse_configuration_extension_yaml: |
#   password_providers:
#     - module: data.decentraland_password_auth_provider.DecentralandPasswordAuthProvider
#       config:
#         enabled: true
#         trusted_servers:
#           - https://peer.decentraland.org/lambdas
#           - https://peer-ec1.decentraland.org/lambdas
#           - https://peer-wc1.decentraland.org/lambdas
#           - https://peer-eu1.decentraland.org/lambdas
#           - https://peer-ap1.decentraland.org/lambdas
#           - https://interconnected.online/lambdas

# Config to support Romeo and Juliet benchmark and testing tools (429 - too many requests):
matrix_synapse_rc_registration:
  per_second: 5
  burst_count: 300

matrix_synapse_rc_login:
  address:
    per_second: 5
    burst_count: 1000
  account:
    per_second: 5
    burst_count: 300
  failed_attempts:
    per_second: 5
    burst_count: 300

matrix_synamse_rc_joins:
  local:
    per_second: 5
    burst_count: 1000
  remote:
    per_second: 5
    burst_count: 1000

matrix_synapse_rc_message:
  per_second: 5
  burst_count: 1000


# Metrics/Stats
matrix_prometheus_enabled: true

matrix_prometheus_node_exporter_enabled: true
matrix_nginx_proxy_proxy_synapse_metrics: true
matrix_nginx_proxy_proxy_synapse_metrics_basic_auth_enabled: false

matrix_grafana_enabled: true

matrix_grafana_anonymous_access: true
