#jinja2: lstrip_blocks: "True"


{% set generic_workers = matrix_nginx_proxy_synapse_workers_list|selectattr('type', 'equalto', 'generic_worker')|list %}
{% set media_repository_workers = matrix_nginx_proxy_synapse_workers_list|selectattr('type', 'equalto', 'media_repository')|list %}
{% set user_dir_workers = matrix_nginx_proxy_synapse_workers_list|selectattr('type', 'equalto', 'user_dir')|list %}
{% set frontend_proxy_workers = matrix_nginx_proxy_synapse_workers_list|selectattr('type', 'equalto', 'frontend_proxy')|list %}

{% macro render_vhost_directives() %}
	gzip on;
	gzip_types text/plain application/json application/javascript text/css image/x-icon font/ttf image/gif;

	{% if matrix_nginx_proxy_hsts_preload_enabled %}
		add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
	{% else %}
		add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
	{% endif %}
	add_header X-Content-Type-Options nosniff;
	add_header X-XSS-Protection "{{ matrix_nginx_proxy_xss_protection }}";
	add_header X-Frame-Options SAMEORIGIN;
	add_header Content-Security-Policy "frame-ancestors 'self'";

	{% if matrix_nginx_proxy_floc_optout_enabled %}
		add_header Permissions-Policy interest-cohort=() always;
	{% endif %}


	{% for configuration_block in matrix_nginx_proxy_proxy_element_additional_server_configuration_blocks %}
		{{- configuration_block }}
	{% endfor %}

	location / {
		{% if matrix_nginx_proxy_enabled %}
			{# Use the embedded DNS resolver in Docker containers to discover the service #}
			resolver 127.0.0.11 valid=5s;
			set $backend "matrix-client-element:8080";
			proxy_pass http://$backend;
		{% else %}
			{# Generic configuration for use outside of our container setup #}
			proxy_pass http://127.0.0.1:8765;
		{% endif %}

		proxy_set_header Host $host;
		proxy_set_header X-Forwarded-For {{ matrix_nginx_proxy_x_forwarded_for }};
	}
{% endmacro %}

server {
	listen {{ 8080 if matrix_nginx_proxy_enabled else 80 }};
	listen [::]:{{ 8080 if matrix_nginx_proxy_enabled else 80 }};


	server_name {{ matrix_nginx_proxy_proxy_element_hostname }};

	server_tokens off;
	root /dev/null;

	{% if matrix_nginx_proxy_https_enabled %}
		location /.well-known/acme-challenge {
			{% if matrix_nginx_proxy_enabled %}
				{# Use the embedded DNS resolver in Docker containers to discover the service #}
				resolver 127.0.0.11 valid=5s;
				set $backend "matrix-certbot:8080";
				proxy_pass http://$backend;
			{% else %}
				{# Generic configuration for use outside of our container setup #}
				proxy_pass http://127.0.0.1:{{ matrix_ssl_lets_encrypt_certbot_standalone_http_port }};
			{% endif %}
		}

		{% if matrix_nginx_proxy_synapse_workers_enabled %}
			{# Workers redirects BEGIN #}

			{% if generic_workers %}
				# https://github.com/matrix-org/synapse/blob/master/docs/workers.md#synapseappgeneric_worker
				{% for location in matrix_nginx_proxy_synapse_generic_worker_client_server_locations %}
				location ~ {{ location }} {
					proxy_pass http://generic_worker_upstream$request_uri;
					proxy_set_header Host $host;
				}
				{% endfor %}
			{% endif %}

			{% if media_repository_workers %}
				# https://github.com/matrix-org/synapse/blob/master/docs/workers.md#synapseappmedia_repository
				{% for location in matrix_nginx_proxy_synapse_media_repository_locations %}
				location ~ {{ location }} {
					proxy_pass http://media_repository_upstream$request_uri;
					proxy_set_header Host $host;

					client_body_buffer_size 25M;
					client_max_body_size {{ matrix_nginx_proxy_proxy_matrix_client_api_client_max_body_size_mb }}M;
					proxy_max_temp_file_size 0;
				}
				{% endfor %}
			{% endif %}

			{% if user_dir_workers %}
				# FIXME: obsolete if matrix_nginx_proxy_proxy_matrix_user_directory_search_enabled is set
				# https://github.com/matrix-org/synapse/blob/master/docs/workers.md#synapseappuser_dir
				{% for location in matrix_nginx_proxy_synapse_user_dir_locations %}
				location ~ {{ location }} {
					proxy_pass http://user_dir_upstream$request_uri;
					proxy_set_header Host $host;
				}
				{% endfor %}
			{% endif %}

			{% if frontend_proxy_workers %}
				# https://github.com/matrix-org/synapse/blob/master/docs/workers.md#synapseappfrontend_proxy
				{% for location in matrix_nginx_proxy_synapse_frontend_proxy_locations %}
				location ~ {{ location }} {
					proxy_pass http://frontend_proxy_upstream$request_uri;
					proxy_set_header Host $host;
				}
				{% endfor %}
				{% if matrix_nginx_proxy_synapse_presence_disabled %}
				# FIXME: keep in sync with synapse workers documentation manually
				location ~ ^/_matrix/client/(api/v1|r0|v3|unstable)/presence/[^/]+/status {
					proxy_pass http://frontend_proxy_upstream$request_uri;
					proxy_set_header Host $host;
				}
				{% endif %}
			{% endif %}
			{# Workers redirects END #}
		{% endif %}

		{% if matrix_nginx_proxy_synapse_workers_enabled %}
			{% if generic_workers %}
				# https://github.com/matrix-org/synapse/blob/master/docs/workers.md#synapseappgeneric_worker
				{% for location in matrix_nginx_proxy_synapse_generic_worker_federation_locations %}
				location ~ {{ location }} {
					proxy_pass http://generic_worker_upstream$request_uri;
					proxy_set_header Host $host;
				}
				{% endfor %}
			{% endif %}
			{% if media_repository_workers %}
				# https://github.com/matrix-org/synapse/blob/master/docs/workers.md#synapseappmedia_repository
				{% for location in matrix_nginx_proxy_synapse_media_repository_locations %}
				location ~ {{ location }} {
					proxy_pass http://media_repository_upstream$request_uri;
					proxy_set_header Host $host;

					client_body_buffer_size 25M;
					client_max_body_size {{ matrix_nginx_proxy_proxy_matrix_federation_api_client_max_body_size_mb }}M;
					proxy_max_temp_file_size 0;
				}
				{% endfor %}
			{% endif %}
		{% endif %}

		location / {
			return 301 https://$http_host$request_uri;
		}
	{% else %}

		{% if matrix_nginx_proxy_synapse_workers_enabled %}
			{# Workers redirects BEGIN #}

			{% if generic_workers %}
				# https://github.com/matrix-org/synapse/blob/master/docs/workers.md#synapseappgeneric_worker
				{% for location in matrix_nginx_proxy_synapse_generic_worker_client_server_locations %}
				location ~ {{ location }} {
					proxy_pass http://generic_worker_upstream$request_uri;
					proxy_set_header Host $host;
				}
				{% endfor %}
			{% endif %}

			{% if media_repository_workers %}
				# https://github.com/matrix-org/synapse/blob/master/docs/workers.md#synapseappmedia_repository
				{% for location in matrix_nginx_proxy_synapse_media_repository_locations %}
				location ~ {{ location }} {
					proxy_pass http://media_repository_upstream$request_uri;
					proxy_set_header Host $host;

					client_body_buffer_size 25M;
					client_max_body_size {{ matrix_nginx_proxy_proxy_matrix_client_api_client_max_body_size_mb }}M;
					proxy_max_temp_file_size 0;
				}
				{% endfor %}
			{% endif %}

			{% if user_dir_workers %}
				# FIXME: obsolete if matrix_nginx_proxy_proxy_matrix_user_directory_search_enabled is set
				# https://github.com/matrix-org/synapse/blob/master/docs/workers.md#synapseappuser_dir
				{% for location in matrix_nginx_proxy_synapse_user_dir_locations %}
				location ~ {{ location }} {
					proxy_pass http://user_dir_upstream$request_uri;
					proxy_set_header Host $host;
				}
				{% endfor %}
			{% endif %}

			{% if frontend_proxy_workers %}
				# https://github.com/matrix-org/synapse/blob/master/docs/workers.md#synapseappfrontend_proxy
				{% for location in matrix_nginx_proxy_synapse_frontend_proxy_locations %}
				location ~ {{ location }} {
					proxy_pass http://frontend_proxy_upstream$request_uri;
					proxy_set_header Host $host;
				}
				{% endfor %}
				{% if matrix_nginx_proxy_synapse_presence_disabled %}
				# FIXME: keep in sync with synapse workers documentation manually
				location ~ ^/_matrix/client/(api/v1|r0|v3|unstable)/presence/[^/]+/status {
					proxy_pass http://frontend_proxy_upstream$request_uri;
					proxy_set_header Host $host;
				}
				{% endif %}
			{% endif %}
			{# Workers redirects END #}
		{% endif %}

		{% if matrix_nginx_proxy_synapse_workers_enabled %}
			{% if generic_workers %}
				# https://github.com/matrix-org/synapse/blob/master/docs/workers.md#synapseappgeneric_worker
				{% for location in matrix_nginx_proxy_synapse_generic_worker_federation_locations %}
				location ~ {{ location }} {
					proxy_pass http://generic_worker_upstream$request_uri;
					proxy_set_header Host $host;
				}
				{% endfor %}
			{% endif %}
			{% if media_repository_workers %}
				# https://github.com/matrix-org/synapse/blob/master/docs/workers.md#synapseappmedia_repository
				{% for location in matrix_nginx_proxy_synapse_media_repository_locations %}
				location ~ {{ location }} {
					proxy_pass http://media_repository_upstream$request_uri;
					proxy_set_header Host $host;

					client_body_buffer_size 25M;
					client_max_body_size {{ matrix_nginx_proxy_proxy_matrix_federation_api_client_max_body_size_mb }}M;
					proxy_max_temp_file_size 0;
				}
				{% endfor %}
			{% endif %}
		{% endif %}


		{{ render_vhost_directives() }}
	{% endif %}
}

{% if matrix_nginx_proxy_https_enabled %}
server {
	listen {{ 8443 if matrix_nginx_proxy_enabled else 443 }} ssl http2;
	listen [::]:{{ 8443 if matrix_nginx_proxy_enabled else 443 }} ssl http2;

	server_name {{ matrix_nginx_proxy_proxy_element_hostname }};

	server_tokens off;
	root /dev/null;

	ssl_certificate {{ matrix_ssl_config_dir_path }}/live/{{ matrix_nginx_proxy_proxy_element_hostname }}/fullchain.pem;
	ssl_certificate_key {{ matrix_ssl_config_dir_path }}/live/{{ matrix_nginx_proxy_proxy_element_hostname }}/privkey.pem;

	{% if matrix_nginx_proxy_synapse_workers_enabled %}
		{# Workers redirects BEGIN #}

		{% if generic_workers %}
			# https://github.com/matrix-org/synapse/blob/master/docs/workers.md#synapseappgeneric_worker
			{% for location in matrix_nginx_proxy_synapse_generic_worker_client_server_locations %}
			location ~ {{ location }} {
				proxy_pass http://generic_worker_upstream$request_uri;
				proxy_set_header Host $host;
			}
			{% endfor %}
		{% endif %}

		{% if media_repository_workers %}
			# https://github.com/matrix-org/synapse/blob/master/docs/workers.md#synapseappmedia_repository
			{% for location in matrix_nginx_proxy_synapse_media_repository_locations %}
			location ~ {{ location }} {
				proxy_pass http://media_repository_upstream$request_uri;
				proxy_set_header Host $host;

				client_body_buffer_size 25M;
				client_max_body_size {{ matrix_nginx_proxy_proxy_matrix_client_api_client_max_body_size_mb }}M;
				proxy_max_temp_file_size 0;
			}
			{% endfor %}
		{% endif %}

		{% if user_dir_workers %}
			# FIXME: obsolete if matrix_nginx_proxy_proxy_matrix_user_directory_search_enabled is set
			# https://github.com/matrix-org/synapse/blob/master/docs/workers.md#synapseappuser_dir
			{% for location in matrix_nginx_proxy_synapse_user_dir_locations %}
			location ~ {{ location }} {
				proxy_pass http://user_dir_upstream$request_uri;
				proxy_set_header Host $host;
			}
			{% endfor %}
		{% endif %}

		{% if frontend_proxy_workers %}
			# https://github.com/matrix-org/synapse/blob/master/docs/workers.md#synapseappfrontend_proxy
			{% for location in matrix_nginx_proxy_synapse_frontend_proxy_locations %}
			location ~ {{ location }} {
				proxy_pass http://frontend_proxy_upstream$request_uri;
				proxy_set_header Host $host;
			}
			{% endfor %}
			{% if matrix_nginx_proxy_synapse_presence_disabled %}
			# FIXME: keep in sync with synapse workers documentation manually
			location ~ ^/_matrix/client/(api/v1|r0|v3|unstable)/presence/[^/]+/status {
				proxy_pass http://frontend_proxy_upstream$request_uri;
				proxy_set_header Host $host;
			}
			{% endif %}
		{% endif %}
		{# Workers redirects END #}
	{% endif %}

	{% if matrix_nginx_proxy_synapse_workers_enabled %}
		{% if generic_workers %}
			# https://github.com/matrix-org/synapse/blob/master/docs/workers.md#synapseappgeneric_worker
			{% for location in matrix_nginx_proxy_synapse_generic_worker_federation_locations %}
			location ~ {{ location }} {
				proxy_pass http://generic_worker_upstream$request_uri;
				proxy_set_header Host $host;
			}
			{% endfor %}
		{% endif %}
		{% if media_repository_workers %}
			# https://github.com/matrix-org/synapse/blob/master/docs/workers.md#synapseappmedia_repository
			{% for location in matrix_nginx_proxy_synapse_media_repository_locations %}
			location ~ {{ location }} {
				proxy_pass http://media_repository_upstream$request_uri;
				proxy_set_header Host $host;

				client_body_buffer_size 25M;
				client_max_body_size {{ matrix_nginx_proxy_proxy_matrix_federation_api_client_max_body_size_mb }}M;
				proxy_max_temp_file_size 0;
			}
			{% endfor %}
		{% endif %}
	{% endif %}

	ssl_protocols {{ matrix_nginx_proxy_ssl_protocols }};
	{% if matrix_nginx_proxy_ssl_ciphers != "" %}
	ssl_ciphers {{ matrix_nginx_proxy_ssl_ciphers }};
	{% endif %}
	ssl_prefer_server_ciphers {{ matrix_nginx_proxy_ssl_prefer_server_ciphers }};

	{% if matrix_nginx_proxy_ocsp_stapling_enabled %}
		ssl_stapling on;
		ssl_stapling_verify on;
		ssl_trusted_certificate {{ matrix_ssl_config_dir_path }}/live/{{ matrix_nginx_proxy_proxy_element_hostname }}/chain.pem;
	{% endif %}

	{% if matrix_nginx_proxy_ssl_session_tickets_off %}
		ssl_session_tickets off;
	{% endif %}
	ssl_session_cache {{ matrix_nginx_proxy_ssl_session_cache }};
	ssl_session_timeout {{ matrix_nginx_proxy_ssl_session_timeout }};

	{{ render_vhost_directives() }}
}
{% endif %}
